from aiogram import types,Dispatcher
from aiogram.dispatcher.filters import Text

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

from keyboards.main_kb import main_menu,call_menu,menu
from create_bot import bot
from settings.requests_func import get_all_params,price_calculate

class get_calculate_price(StatesGroup):
    get_calculate=State()

#@dp.message_handler(Text(equals = '–†–∞—Å—á—ë—Ç'))
async def get_auto_link(message: types.Message):
    await message.answer("–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—å!", reply_markup=menu)
    await get_calculate_price.get_calculate.set()

#@dp.message_handler(state="*",commands = "cancel")
#@dp.message_handler(Text(equals='cancel',ignore_case=True),state="*")
async def cancel_handler(message: types.Message,state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.answer("–í—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –º–µ–Ω—é!",reply_markup=main_menu)

#@dp.message_handler(state=get_weather_info.wather_info)
async def get_calculate_info(message: types.Message, state: FSMContext):
    auto_link = message.text
    
    
    if auto_link == "–ú–µ–Ω—é" or auto_link == "/start":
        await message.answer('–í—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –º–µ–Ω—é.', reply_markup=main_menu)
        await state.finish()
        return
    
    if not auto_link.startswith("https://www.mobile.de/"):
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –≤–≤–µ–¥—ë–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. \n–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "https://www.mobile.de/".',disable_web_page_preview=True, reply_markup=main_menu)
        await state.finish()
        return
 
    else:
        await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç —Ä–∞—Å—á–µ—Ç, —Ä–∞—Å—á–µ—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-3 –º–∏–Ω—É—Ç—ã, –≤ —Ä–µ–¥–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –¥–æ 30 –º–∏–Ω—É—Ç.', reply_markup=menu)
        params_result = get_all_params(auto_link)
        a, b, c, d = params_result
        res1,res2,res3 = price_calculate(a,b,c,d)
        channel_id = -1
        sms_text = (f'https://t.me/{message.from_user.username}' +'\n\n'+ f'{auto_link}')

        full_text = (
            "–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å: \n\n"

            "<b>- –ó–∞–ø—Ä–æ—Å –∫ –¥–∏–ª–µ—Ä—É –≤ –ì–µ—Ä–º–∞–Ω–∏–∏ (–∑–∞–ø—Ä–æ—Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∞–≤–∞—Ä–∏–π–Ω–æ—Å—Ç—å, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–±–µ–≥–∞, —Å–µ—Ä–≤–∏—Å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è, —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è —á–∏—Å—Ç–æ—Ç–∞)\n </b>"
            "<b>- –û–ø–ª–∞—Ç–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –Ω–æ–º–µ—Ä–æ–≤\n </b>"
            "<b>- –£—Å–ª—É–≥–∏ –ø–æ –¥–æ—Å—Ç–∞–≤–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å–≤–æ–∏–º —Ö–æ–¥–æ–º\n </b>"
            "<b>- –¢–∞–º–æ–∂–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏\n </b>"
            "<b>- –í–æ–∑–≤—Ä–∞—Ç –Ω–µ–º–µ—Ü–∫–æ–≥–æ –ù–î–° (–≤—ã —Å—Ä–∞–∑—É –ø–æ–∫—É–ø–∞–µ—Ç–µ –º–∞—à–∏–Ω—É –ø–æ —Ü–µ–Ω–µ –ù–µ—Ç—Ç–æ)\n </b>" 
            "<b>- –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –°–ë–ö–¢–°, –≠–ü–¢–° –∏ –æ–ø–ª–∞—Ç—É —É—Ç–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –æ—Ç –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞.\n </b>"
            "<b>- –í–æ–∑–º–æ–∂–Ω–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —É—á–µ—Ç –≤ –ì–ò–ë–î–î\n\n </b>"

            "–û–ø–ª–∞—Ç–∞:\n\n"

            "<b>–î–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –Ω—É–∂–Ω–æ: </b>\n"
            "<b> - –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º </b>\n"
            "<b> - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å </b>\n"
            "<b> - –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –¥–∏–ª–µ—Ä–æ–º –∏ –∑–∞–∫–ª—é—á–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å –¥–∏–ª–µ—Ä–æ–º –Ω–∞ –≤—ã–∫—É–ø –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è. </b>\n\n"

            "<i> –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ–¥–±–µ—Ä–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –º—ã –∑–∞–∫–ª—é—á–∞–µ–º —Å –≤–∞–º–∏ –¥–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –∏ –≤—ã –≤–Ω–æ—Å–∏—Ç–µ –∞–≤–∞–Ω—Å 30%\n </i>"
            "<i> –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ú–æ—Å–∫–≤—É.\n\n </i>"
            "<b> –°—Ä–æ–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ 2-4 –Ω–µ–¥–µ–ª–∏\n\n </b>"

            "–ù–æ–º–µ—Ä ‚Äì —Å–≤—è–∑–∞—Ç—å—Å—è –ø–æ –¢–µ–ª–µ—Ñ–æ–Ω—É\n"
            "WhatsApp ‚Äì —Å–≤—è–∑–∞—Ç—å—Å—è –ø–æ WhatsApp\n"
            "Telegram ‚Äì —Å–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram"
        )
        
        if isinstance(res1, float) and isinstance(res3, str):

            await message.answer(f"<b> {res2} </b>" + "\n\n" +
                                 "==============================\n"+
                         'üîπ –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å "<b>–ü–û–î –ö–õ–Æ–ß</b>" –≤ –ú–æ—Å–∫–≤–µ: ‚Ç¨' + f"{res1}\n" +
                         "=============================="+"\n\n" +
                         '‚ùóÔ∏è<b>–í–ù–ò–ú–ê–ù–ò–ï</b>, –Ω–∞ –ª—é–±–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å <b>–ì–ê–†–ê–ù–¢–ò–Æ</b>‚ùóÔ∏è\n\n'+
                         f"{auto_link}" + "\n\n"+
                         full_text,parse_mode=types.ParseMode.HTML, disable_web_page_preview=True, reply_markup=call_menu)
            
            await state.finish()
            await bot.send_message(chat_id=channel_id, text=sms_text)
            return

        if isinstance(res1, float) and isinstance(res3, int):     
                                 
            await message.answer(f"<b> {res2} </b>" + "\n\n" +
                                 "==============================\n"+
                         'üîπ –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å "<b>–ü–û–î –ö–õ–Æ–ß</b>" –≤ –ú–æ—Å–∫–≤–µ: ‚Ç¨' + f"{res1}\n" +
                         "=============================="+"\n\n" +
                         '‚ùóÔ∏è<b>–í–ù–ò–ú–ê–ù–ò–ï</b>, –Ω–∞ –ª—é–±–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å <b>–ì–ê–†–ê–ù–¢–ò–Æ</b>‚ùóÔ∏è\n\n'+
                         f"{auto_link}" + "\n\n"+
                         full_text,parse_mode=types.ParseMode.HTML,disable_web_page_preview=True, reply_markup=call_menu)
            await state.finish()
            await bot.send_message(chat_id=channel_id, text=sms_text)
            return

        if isinstance(res3, int) and res3 < 0: 
            await message.answer(f"<b> {res1} </b>" + "\n\n" + f'<b> {res2} </b>',parse_mode=types.ParseMode.HTML, disable_web_page_preview=True, reply_markup=main_menu)
            await state.finish()
            return
        
        if a == "0" and b == 0 and c == "09/2020" and d == 0: 
            await message.answer("–°–µ—Ä–≤–µ—Ä–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", reply_markup=call_menu)
            await state.finish()
            return
            
        else: 
            await message.answer("–û—à–∏–±–∫–∞ —Ä–∞—Å—á—ë—Ç–∞! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É!", reply_markup=call_menu)
            await state.finish()
            return


def register_handlers_calculate_price(dp: Dispatcher):
    dp.register_message_handler(get_auto_link, Text(equals="–†–∞—Å—á—ë—Ç") | Text(equals="–ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç"), state=None)
    dp.register_message_handler(cancel_handler,state="*",commands="cancel")
    dp.register_message_handler(cancel_handler,Text(equals='cancel',ignore_case=True),state="*")
    dp.register_message_handler(get_calculate_info,state=get_calculate_price.get_calculate)
